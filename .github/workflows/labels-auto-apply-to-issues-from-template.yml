name: Labels Auto Apply to Issues from Template
description: Automatically applies labels to issues based on template checkboxes
# Triggers: issue opened/edited
# Purpose: Parse issue template and apply checked labels automatically

on:
  issues:
    types: [opened, edited]

permissions:
  issues: write
  contents: read

jobs:
  auto-label:
    runs-on: ubuntu-latest
    steps:
      - name: Extract and apply labels from issue body
        uses: actions/github-script@v7
        with:
          script: |
            const issueBody = context.payload.issue.body || '';
            const issueNumber = context.payload.issue.number;
            
            // Extract only the labels section (from ## Type to ## Description or end of labels section)
            // This prevents matching checkboxes in Acceptance Criteria or other sections
            const labelSectionMatch = issueBody.match(/## Type[\s\S]*?(?=\n## Description|\n---\n\n## Description|$)/i);
            
            if (!labelSectionMatch) {
              console.log('No labels section found in issue template');
              return;
            }
            
            const labelsSection = labelSectionMatch[0];
            console.log('Parsing labels section...');
            
            // Regular expression to find checked boxes with label format
            // Matches both:
            // - [x] `type:feat` (category:value format)
            // - [x] `good-first-issue` (standalone format)
            const labelRegex = /- \[x\]\s*`?([a-z-]+(?::[a-z-]+)?)`?/gi;
            
            // Extract all checked labels from labels section only
            const matches = [...labelsSection.matchAll(labelRegex)];
            const labelsToAdd = matches.map(match => match[1]);
            
            if (labelsToAdd.length === 0) {
              console.log('No checked labels found in labels section');
              return;
            }
            
            console.log(`Found labels to add: ${labelsToAdd.join(', ')}`);
            
            // Get existing labels on the issue
            const { data: currentLabels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            const existingLabelNames = currentLabels.map(label => label.name);
            
            // Only add labels that don't already exist
            const newLabels = labelsToAdd.filter(label => !existingLabelNames.includes(label));
            
            if (newLabels.length === 0) {
              console.log('All labels already applied');
              return;
            }
            
            console.log(`Adding new labels: ${newLabels.join(', ')}`);
            
            // Add labels to the issue
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: newLabels
            });
            
            console.log('Labels successfully added!');


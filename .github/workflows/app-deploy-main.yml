name: App Deploy (Main)

on:
  push:
    branches: [main]
    paths:
      - 'apps/game-client/**'
      - 'packages/ui/**'
      - 'packages/theme/**'
      - 'tools/e2e/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'turbo.json'
      - '.github/workflows/app-deploy-main.yml'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: app-deploy-main-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: |
            **/pnpm-lock.yaml
      
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Run typecheck
        run: pnpm turbo run typecheck

      - name: Run linting
        run: pnpm turbo run lint

      - name: Run tests
        run: pnpm test
      
      - name: Build game client and dependencies
        run: pnpm turbo run build
      
      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}
          github-comment: true
          github-deployment: false
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ hashFiles('tools/e2e/package.json') }}
          restore-keys: |
            playwright-browsers-

      - name: Install Playwright browsers
        run: pnpm --filter @kartuli/e2e exec playwright install chromium
      
      - name: Run E2E smoke tests on production
        env:
          BASE_URL: https://www.kartuli.app
          VERCEL_PROTECTION_BYPASS_SECRET: ${{ secrets.VERCEL_PROTECTION_BYPASS_SECRET }}
        run: pnpm test:e2e
      
      - name: Upload E2E artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts-main-${{ github.run_number }}
          path: tools/e2e/test-results/
          retention-days: 3
